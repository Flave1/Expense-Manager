@model IEnumerable<GlobalLitePortalHelper.APIObjs.WorkflowTaskObj>
@using XPLUG.WEBTOOLKIT
@using GlobalLitePortalHelper.APICore
@using GlobalLitePortalHelper.APIObjs
@using PlugLitePortalHelper.APIObjs
@{
    ViewBag.Title = "WorkflowTask Management";
    ViewBag.PgTitle = "WorkflowTask Management";
    var error = ViewBag.Error as string;

    var clientVal = ViewBag.ClientId as string;
    var prodVal = ViewBag.ProductId as string;
    var prodItemVal = ViewBag.ProductItemId as string;
    var clientId = 0;
    var prodId = 0;
    var prodItemId = 0;
    decimal sum = 0;
    var Requisitions = (List<ExpenseRequisitionObj>)Session["_AExpenseRequisitionList_"];
    if (Requisitions == null)
    {
        Requisitions = new List<ExpenseRequisitionObj>();
    }

}


    <div class="card col-10 " style="margin:auto"> 
        <div class="card-header">
            <div class="row">

                <div class="col-md-6">
                    <b><h3>Requisition Approval</h3></b>
                </div>
                <div class="col-md-6 row text-right">
                    <button type="button" class="btn btn-yellow col-3 btn-sm waves-effect waves-light d-inline-block md-trigger" id="btnLoad">
                        <i class="icofont icofont-plus m-r-5"></i>RELOAD
                    </button>
                    <input type="text" readonly value="" id="TotalToDiburse" class="text-black small col-6" >
                </div>


            </div>
        </div>
        <div class="card-block">
            @if (!string.IsNullOrEmpty(error) && error.Length > 0)
            {
                <div class="alert alert-success btn btn-sm" role="alert">
                    @Html.Raw(error)
                </div>
            }
            <div class="table-responsive">
                <table id="dtBasicExample" class="table table-striped table-bordered" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Title</th>
                            <th> Amount</th> 
                            <th>Status</th>
                            <th class="tabledit-toolbar-column">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int k = 1;
                            foreach (var item in Model.OrderByDescending(m => m.WorkflowTaskId))
                            {
                               
                                <tr>
                                    <th>@k</th>

                                    <td>

                                        @foreach (var req in Requisitions.Where(m => m.ExpenseRequisitionId == item.ExpenseRequisitionId))
                                        {
                                        <span class="wrap-table">
                                            @req.Title
                                            <br />  
                                                @item.StartDate 
                                        </span>
                                        }
                                        @* @Requisitions.SingleOrDefault(x => x.ExpenseRequisitionId == item.ExpenseRequisitionId).Title*@

                                    </td>
                                    <td>
                                        <span class="wrap-table">
                                            @foreach (var req in Requisitions.Where(m => m.ExpenseRequisitionId == item.ExpenseRequisitionId))
                                            { 
                                                 sum += req.TotalAmount;
                                            <span class="wrap-table">
                                                @req.TotalAmount
                                               
                                            </span>
                                            }
                                            @*@Requisitions.FirstOrDefault(x => x.ExpenseRequisitionId == item.ExpenseRequisitionId).TotalAmount*@
                                        </span>
                                    </td>
                                     

                                    <td>
                                        <span class="wrap-table">
                                            @{ var enaumName = (TaskStatus)item.Status;}
                                            @enaumName
                                        </span>
                                    </td>

                                    <td>
                                        <div class="tabledit-toolbar btn-toolbar">
                                            <span class="p-1"><a href="@Url.Action("AddWorkflowDetail", "WorkflowDetailManager", new {WorkflowTaskId = item.WorkflowTaskId})"><i class="fas fa-list-alt"></i></a></span>

                                        </div>


                                    </td>

                                </tr>
                                k++;
                            }
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
@section scripts {

    <script>
        $('#dtBasicExample').DataTable();
         

        $('.dataTables_length').hide();

         $('#dtBasicExample_filter').hide();

        $('#TotalToDiburse').val(numberWithCommas('@sum ')+ ' to approve');

            $('#btnLoad').on("click", function () {
                   var selClient = localStorage["_ClientID_"];
                var selProd = localStorage["_ProductID_"]; 

                if (selClient === null || selClient === "" || parseInt(selClient) < 1) {
                    InlineErrorMessage("Session Time out please try logging out and login !", "dvError");
                    return false;
                }

                if (selProd === null || selProd === "" || parseInt(selProd) < 1) {
                    InlineErrorMessage("Session Time out please try logging out and login!", "dvError");
                    return false;
                }

             


                var url = '@Url.Action("Index", "WorkflowTaskManager")?clientId=' + parseInt(selClient) + "&productId=" + parseInt(selProd);

                $("#waitAdd").show();

                window.location.href = url;

                $("#waitAdd").hide();

            });
         function numberWithCommas(x) {
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }
    </script>


    <script>
        function deleteItem(id) {
            if (id === "" || parseInt(id) < 1) {
                InlineErrorMessage(data.Error ? data.Error : "Invalid Selection!", "dvError");
                return false;
            }
            if (!confirm("Are you sure you want to delete this item?")) {
                return false;
            }


            $.ajax({
                type: "POST",
                url: '@Url.Action("ProcessDeleteRequest", "WorkflowTaskManager")',
                data: {JSON.stringify( WorkflowTaskId: parseInt(id)) }, //JSON.stringify(),
                success: function (data) {
                    if (!data.IsAuthenticated) {
                        window.location.href = "@Url.Action("Login", "Portal")";
                        return;
                    }
                    if (!data.IsSuccessful) {
                        InlineErrorMessage(data.Error ? data.Error : "Unknown error occured. Please try again later!", "dvError");
                        swal({
                            title: "",
                            text: data.Error ? data.Error : "Unknown error occured. Please try again later!",
                            type: "error",
                            showCancelButton: false,
                            confirmButtonText: "Close",
                            closeOnConfirm: true,
                        }, function (isConfirm) {
                            if (isConfirm) {

                            }
                        });

                    } else {
                        $('#dvModal').modal('hide');
                        swal({
                            title: "",
                            text: "WorkflowTask Information was deleted successfully",
                            type: "success",
                            showCancelButton: false,
                            confirmButtonText: "Ok",
                            closeOnConfirm: false,
                        }, function (isConfirm) {
                            if (isConfirm) {
                                window.location.reload();
                            }
                        });
                    }
                },
                complete: function () {
                    // $("#waitAdd").hide();

                }
            });
            return false;
        }
    </script>
}