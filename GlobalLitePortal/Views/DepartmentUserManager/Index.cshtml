@model IEnumerable<GlobalLitePortalHelper.APIObjs.DepartmentUserObj>
@using XPLUG.WEBTOOLKIT
@using PluglexHelper.PortalObjs
@using PlugLitePortalHelper.APIObjs
@{
    ViewBag.Title = "DepartmentUser Management";
    ViewBag.PgTitle = "DepartmentUser Management";
    var error = ViewBag.Error as string;

   
    var users = (List<UserItemObj>)Session["_UsersList_"];
    var depts = (List<DepartmentObj>)Session["_DepartmentList_"];
    if (depts == null)
    {
        users = new List<UserItemObj>();
    }
    if (depts == null)
    {
        depts = new List<DepartmentObj>();
    }
}

<b><h3>Departments</h3></b>
<div class="card">
    <div class="card-header">
        <div class="row text-right" >
          
            <div class="col-8">
                <button type="button" class="btn btn-yellow btn-sm waves-effect waves-light d-inline-block md-trigger" id="btnLoad">
                    <i class="icofont icofont-plus m-r-5"></i>RELOAD
                </button>
            </div>
            <div class="col-4">

                <button type="button" class="btn btn-yellow btn-sm waves-effect waves-light d-inline-block md-trigger" id="btnAddNewItem">
                    <i class="icofont icofont-plus m-r-5"></i>New
                </button>
            </div>
        </div>
    </div>
    <div class="card-block">
        @if (!string.IsNullOrEmpty(error) && error.Length > 0)
        {
            <div class="alert alert-success btn btn-sm" role="alert">
                @Html.Raw(error)
            </div>
        }
        <div class="table-responsive">
            <table id="dtBasicExample" class="table table-striped table-bordered" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>User</th>
                        <th> Department </th>
                        <th> Email </th>
                        <th> Permissions </th>
                        @* <th> Roles </th>*@
                        @*<th class="tabledit-toolbar-column">Action</th>*@
                    </tr>
                </thead>
                <tbody>
                    @{
                        int k = 1;
                        foreach (var item in Model)
                        {
                            <tr>
                                <th>@k</th>
                                @foreach (var user in users.Where(m => m.UserId == item.UserId))
                                {
                                    <td>
                                        <span class="wrap-table">
                                            @user.FirstName  @user.LastName
                                        </span>
                                    </td>
                                }
                                @foreach (var itemdept in depts.Where(m => m.DepartmentId == item.DepartmentId))
                                {
                                    <td>
                                        <span class="wrap-table">
                                            @itemdept.Name
                                        </span>
                                    </td>
                                }


                                @foreach (var user in users.Where(m => m.UserId == item.UserId))
                                {
                                    <td>
                                        <span class="wrap-table">
                                            @user.Email
                                        </span>
                                    </td>
                                }

                                @foreach (var user in users.Where(m => m.UserId == item.UserId))
                                {
                                    <td>
                                        @foreach (var userRole in users.Where(m => m.UserId == item.UserId))
                                        {
                                            foreach (var role in userRole.RoleItems)
                                            {
                                                <span class="wrap-table">
                                                    @role.Name
                                                </span>
                                            }
                                        }
                                    </td>
                                }
                                @*<td>
                                        <span class="wrap-table">
                                            @item.UserRoles
                                        </span>
                                    </td>*@

                                <td>
                                    <div class="tabledit-toolbar btn-toolbar">

                                        <span class="p-1"><a href="@Url.Action("_EditDepartmentUser", "DepartmentUserManager", new {DepartmentUserId = item.DepartmentUserId})" data-modal="" data-toggle="tooltip" title="Edit"><i class="far fa-edit"></i></a></span>
                                        @*<span class="p-1"><a href="@Url.Action("_DepartmentUserDetail", "DepartmentUserManager", new {DepartmentUserId = item.DepartmentUserId})" data-modal="" data-toggle="tooltip" title="Detail">   <i class="fas fa-eye"></i></a></span>
                                            <span class="p-1"><a href="@Url.Action("_ManageDepartmentUserUsers", "DepartmentUserManager", new {DepartmentUserId = item.DepartmentUserId, DepartmentUserName = item.DepartmentUserName})" data-modal="" data-backdrop="static" data-keyboard="false" data-toggle="tooltip" title="Manage Users">   <i class="fas fa-users-cog"></i></a></span>
                                            <span class="p-1"><a href="@Url.Action("Index", "ProductManager", new {DepartmentUserId = item.DepartmentUserId})" title="Products">   <i class="fa fa-arrow-circle-right"></i></a></span>
                                            <span class="p-1"><a href="#" onclick="deleteItem('@item.DepartmentUserId')" data-toggle="tooltip" title="Delete"><i class="far fa-trash-alt red-text"></i></a></span>*@

                                    </div>


                                </td>

                            </tr>
                            k++;
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>
@section scripts {

    <script>
        $(document).ready(function () {
        //$('#dtBasicExample').DataTable();

        //$('.dataTables_length').addClass('bs-select'); 

            $('#btnLoad').on("click", function () {
                ClearInlineError("dvError");

                var selClient = localStorage["_ClientID_"];
                var selProd = localStorage["_ProductID_"]; 

                if (selClient === null || selClient === "" || parseInt(selClient) < 1) {
                    InlineErrorMessage("Please select a Client!", "dvError");
                    return false;
                }

                if (selProd === null || selProd === "" || parseInt(selProd) < 1) {
                    InlineErrorMessage("Please select a Product!", "dvError");
                    return false;
                }
            


                var url = '@Url.Action("Index", "DepartmentUserManager")?clientId=' + parseInt(selClient) + "&productId=" + parseInt(selProd) ;

                $("#waitAdd").show();

                window.location.href = url;

                $("#waitAdd").hide();

            });

        });
    </script>
    <script>

          $('#btnAddNewItem').on("click", function () {
                ClearInlineError("dvError");

                var selClient = localStorage["_ClientID_"];
                var selProd = localStorage["_ProductID_"]; 

                if (selClient === null || selClient === "" || parseInt(selClient) < 1) {
                    InlineErrorMessage("Session Time out please try logging out and login !", "dvError");
                    return false;
                }

                if (selProd === null || selProd === "" || parseInt(selProd) < 1) {
                    InlineErrorMessage("Session Time out please try logging out and login!", "dvError");
                    return false;
                }
               

                var url = '@Url.Action("AddDepartmentUser", "DepartmentUserManager")?clientId=' + parseInt(selClient) + "&productId=" + parseInt(selProd)  ;

                $("#waitAdd").show();

                window.location.href = url;

                $("#waitAdd").hide();

            });


    </script>




    <script>
        function deleteItem(id) {
            if (id === "" || parseInt(id) < 1) {
                InlineErrorMessage(data.Error ? data.Error : "Invalid Selection!", "dvError");
                return false;
            }
            if (!confirm("Are you sure you want to delete this item?")) {
                return false;
            }


            $.ajax({
                type: "POST",
                url: '@Url.Action("ProcessDeleteRequest", "DepartmentUserManager")',
                data: { DepartmentUserId: parseInt(id) }, //JSON.stringify(),
                success: function (data) {
                    if (!data.IsAuthenticated) {
                        window.location.href = "@Url.Action("Login", "Portal")";
                        return;
                    }
                    if (!data.IsSuccessful) {
                        InlineErrorMessage(data.Error ? data.Error : "Unknown error occured. Please try again later!", "dvError");
                        swal({
                            title: "",
                            text: data.Error ? data.Error : "Unknown error occured. Please try again later!",
                            type: "error",
                            showCancelButton: false,
                            confirmButtonText: "Close",
                            closeOnConfirm: true,
                        }, function (isConfirm) {
                            if (isConfirm) {

                            }
                        });

                    } else {
                        $('#dvModal').modal('hide');
                        swal({
                            title: "",
                            text: "DepartmentUser Information was deleted successfully",
                            type: "success",
                            showCancelButton: false,
                            confirmButtonText: "Ok",
                            closeOnConfirm: false,
                        }, function (isConfirm) {
                            if (isConfirm) {
                                window.location.reload();
                            }
                        });
                    }
                },
                complete: function () {
                    // $("#waitAdd").hide();

                }
            });
            return false;
        }
    </script>
}