@model GlobalLitePortalHelper.APIObjs.ProductItemObj
@{
    ViewBag.Title = "Product Display";
    ViewBag.PgTitle = "Product Display";
    var error = ViewBag.Error as string;
    var sessionError = ViewBag.SessionError as string;
    var hasError = !string.IsNullOrEmpty(error);
    var hasSessionError = !string.IsNullOrEmpty(sessionError);
}
@Html.Partial("_WaitLoader")
<div>
    <h5><b>@Model.ClientName {@Model.ProductName}</b></h5>
</div>
<div class="card">
    @if (hasSessionError)
    {
        <div class="alert alert-danger" role="alert" id="customError">
            <p>@Html.Raw(sessionError)</p>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>

    }
    else
    {
        <div class="card-header">
            @if (hasError)
            {
                <div class="alert alert-danger" role="alert" id="customError">
                    <p>@Html.Raw(error)</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>

            }
            <div class="row">
                <div class="col-sm-9 form-group">
                    <div id="dvError"></div>
                </div>
                <div class="col-sm-3 text-right">
                    <button type="button" class="btn btn-secondary btn-sm waves-effect waves-light d-inline-block md-trigger" id="btnBackToProd">
                        <i class="icofont icofont-plus m-r-5"></i>Back to Products
                    </button>
                </div>
            </div>
        </div>
        <div class="card-block" style="margin-top: 15px">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmEditProduct", data_parsley_validate = "" }))
            {
                @Html.Hidden("ClientId", Model.ClientId)
                @Html.Hidden("ProductId", Model.ProductId)
                @Html.Hidden("ProductItemId", Model.ProductItemId)
                <div class="col-md-12 col-sm-12">
                    <div class="row">
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            <div class="form-group">
                                Product Name
                                <input type="text" readonly="readonly" class="form-control" id="Name" value="@Model.Name" name="Name" required="" data-parsley-maxlength="150" data-parsley-minlength="2" data-parsley-required-message="Product Name must be between 2 and 150 characters">
                            </div>
                        </div>
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            <div class="form-group">
                                Product Title
                                <input type="text" class="form-control" readonly="readonly" id="Title" value="@Model.Title" name="Title" required="" data-parsley-maxlength="300" data-parsley-minlength="2" data-parsley-required-message="Product Title must be between 2 and 300 characters">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            <div class="form-group">
                                Current Implementation
                                <select readonly="readonly" id="CurrentImplementation" name="CurrentImplementation" disabled="disabled" class="form-control input-new" style="width: 100%"></select>
                            </div>
                        </div>
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            <div class="row" style="margin-top: 15px">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        Main
                                        <input type="checkbox" @(Model.DisplayDemographicStat ? "checked='checked'" : "") disabled="disabled" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        Summary
                                        <input type="checkbox" @(Model.DisplaySummaryStat ? "checked='checked'" : "") disabled="disabled" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        Location
                                        <input type="checkbox" @(Model.DisplayLocationStat ? "checked='checked'" : "") disabled="disabled" />

                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        Others
                                        <input type="checkbox" @(Model.HasOtherStat ? "checked='checked'" : "") disabled="disabled" />

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            <div class="form-group">
                                Live API Url
                                <input type="text" readonly="readonly" class="form-control" id="LiveAPIUrl" value="@Model.LiveAPIUrl" name="LiveAPIUrl" required="" data-parsley-maxlength="300" data-parsley-minlength="5" data-parsley-required-message="Live API Url  must be between 5 and 300 characters">
                            </div>
                        </div>
                        <div class="col-md-5 col-sm-5 col-xs-12">
                            <div class="form-group">
                                SandBox API Url
                                <input type="text" readonly="readonly" class="form-control" id="SandBoxAPIUrl" value="@Model.SandBoxAPIUrl" name="SandBoxAPIUrl" required="" data-parsley-maxlength="300" data-parsley-minlength="5" data-parsley-required-message="SandBox API Url  must be between 5 and 300 characters">
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-10 col-sm-5 col-xs-12">
                            <div class="form-group">
                                Description
                                <textarea rows="4" readonly="readonly" name="Description" id="Description" value="@Model.Description" class="form-control" required="" data-parsley-required-message="Description is required">@Model.Description</textarea>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }


</div>
@section scripts {
    <script src="~/Content/assets/libs/jquery-validation/dist/jquery.validate.min.js"></script>

    <script>
    $(document).ready(function () {

        loadCurrentImplementations();

        $('#btnBackToProd').on("click", function () {
            ClearInlineError("dvError");
            var selClient = '@Model.ClientId';
            var selProd = '@Model.ProductId';
            var clientId = 0;
            var prodId = 0;
            if (selClient === "" || selClient.length < 1 || parseInt(selClient) < 1) {
                clientId = 0;
            } else {
                clientId = parseInt(selClient);
            }

            if (selProd === "" || selProd.length < 1 || parseInt(selProd) < 1) {
                prodId = 0;
            } else {
                prodId = parseInt(selProd);
            }

            var url = '@Url.Action("Index", "ProductItemManager")?clientId=' + clientId + "&productId=" + prodId;

            $("#waitAdd").show();

            window.location.href = url;

            $("#waitAdd").hide();

        });


      


    });

    function loadCurrentImplementations() {
        $.getJSON("@Url.Action("LoadCurrentImplementation", "ODataProvider")",
            function(data) {
                var items = "";
                $.each(data,
                    function(i, item) {
                        if (parseInt('@Model.CurrentImplementation') === item.Id) {
                            items += "<option value='" + item.Id + "' selected='selected'>" + item.Name + "</option>";
                        } else {
                            items += "<option value='" + item.Id + "'>" + item.Name + "</option>";
                        }

                    });
                $("#CurrentImplementation").html(items);
            });
    }
    </script>
}





