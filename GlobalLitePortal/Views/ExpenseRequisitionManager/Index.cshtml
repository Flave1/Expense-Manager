@model IEnumerable<GlobalLitePortalHelper.APIObjs.ExpenseRequisitionObj>
@using XPLUG.WEBTOOLKIT
@using PlugLitePortalHelper.APIObjs
@using GlobalLitePortalHelper.APICore
@{
    ViewBag.Title = "ExpenseRequisition Management";
    ViewBag.PgTitle = "ExpenseRequisition Management";
    var error = ViewBag.Error as string;

    decimal sum = 0;

    var deptList = (List<DepartmentObj>)Session["_DeptList_"];
    if (deptList == null)
    {
        deptList = new List<DepartmentObj>();
    }
}
@Html.Partial("_WaitLoader")
<b><h3>Requisitions</h3></b>
<div class="card">
    <div class="card-header">
        <div class="row ">
            <div class="col-md-4">
                <input type="text" readonly value="" class="small" id="TotalRequisition" />
            </div>
            <div class="col-md-4 text-right">
                <button type="button" class="btn btn-yellow btn-sm waves-effect waves-light d-inline-block md-trigger" id="btnLoad">
                    <i class="icofont icofont-plus m-r-5"></i>RELOAD
                </button>
            </div>
            <div class="col-md-4 text-right">
                <button type="button" class="btn btn-yellow btn-sm waves-effect waves-light d-inline-block md-trigger" id="btnAddNewItem">
                    <i class="icofont icofont-plus m-r-5"></i>New
                </button>
            </div>

        </div>
    </div>
    <div class="card-block">
        @if (!string.IsNullOrEmpty(error) && error.Length > 0)
        {
            <div class="alert alert-success btn btn-sm" role="alert">
                @Html.Raw(error)
            </div>
        }
    <div class="table-responsive">
        <table id="dtBasicExample" class="table table-striped table-bordered" cellspacing="0" width="100%"> 
            <thead>
                <tr>
                    <th>#</th>
                    <th> Title  </th>
                    <th> Department  </th>
                    <th>  Request Number  </th>
                    <th>  T.Amount  </th>
                    <th>  No. of items  </th>
                    <th>Status</th>
                    <th class="tabledit-toolbar-column">Action</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int k = 1;
                    foreach (var item in Model.OrderByDescending(m => m.ExpenseRequisitionId))
                    {
                        sum += item.TotalAmount;
                        <tr>
                            <th>@k</th>

                            <td>
                                <span class="wrap-table">
                                    @item.Title <br /><small>@item.TimeStampRegistered</small>
                                </span>
                            </td>
                            <td>
                                <span>
                                    @deptList.FirstOrDefault(m => m.DepartmentId == item.DepartmentId).Name
                                </span>

                            </td>
                            <td>
                                <span class="wrap-table">
                                    @item.RequestNumber
                                </span>

                            </td>
                            <td>
                                <span class="wrap-table singleAmount">
                                    @item.TotalAmount
                                </span>
                            </td>
                            <td>

                                @if (item.ExpenseRequisitionItems == null)
                                {
                                    <span class="wrap-table">
                                        No item
                                    </span>
                                }
                                else
                                {
                                    <span class="wrap-table">
                                        @item.ExpenseRequisitionItems.Count item (s)
                                    </span>
                                }


                            </td>
                            <td>
                                <span class="wrap-table">
                                    @{ var enumName = (RequestStatus)item.Status; }
                                    @enumName
                                </span>

                            </td>
                            <td>
                                <div class="tabledit-toolbar btn-toolbar">
                                    @if (item.Status == -2)
                                    {
                                        <span class="p-1"><a href="@Url.Action("_EditExpenseRequisition", "ExpenseRequisitionManager", new {ExpenseRequisitionId = item.ExpenseRequisitionId})" data-toggle="tooltip" title="Edit"><i class="far fa-edit"></i></a></span>

                                    }
                                    <span class="p-1"><a href="@Url.Action("_ExpenseRequisitionDetail", "ExpenseRequisitionManager", new {ExpenseRequisitionId = item.ExpenseRequisitionId})" data-toggle="tooltip" title="Detail">   <i class="fas fa-eye"></i></a></span>
                                    <span class="p-1"><a href="@Url.Action("CopyExpenseRequisition", "ExpenseRequisitionManager", new {ExpenseRequisitionId = item.ExpenseRequisitionId})" data-toggle="tooltip" title="Copy to new">   <i class="fas fa-copy"></i></a></span>
                                    @if (item.Status != (int)RequestStatus.Registered)
                                    {
                                        <span class="p-1"><a href="@Url.Action("RecommendationList", "WorkflowTaskManager", new {ExpenseRequisitionId = item.ExpenseRequisitionId})" data-modal="" data-toggle="tooltip" title=""><i class="fas fa-chart-bar"></i></a></span>

                                    }

                                </div>


                            </td>

                        </tr>
                        k++;
                    }
                }

            </tbody>

        </table> 
    </div>
    </div>
</div>
@section scripts {
    <script>
        function numberWithCommas(x) {
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }
         
         
        $(document).ready(function () {
            $('#dtBasicExample').DataTable(); 
            $('.dataTables_length').addClass('bs-select');   

            //var totalArray = [];
            //var values = {};
            //var total = 0;

            //jQuery('.singleAmount').each(function () {

            //   var currentElement = $(this);

            //   values = currentElement.html().trim();

            //    totalArray.push(parseInt(values));
            //    total += parseInt($(this).html().replace(',',''));
            //});
             


            $('#TotalRequisition').val( numberWithCommas('@sum') + ' total amount of requisitions made');
 

        });


        
           

            $('#btnLoad').on("click", function () {
                ClearInlineError("dvError");

                var selClient = localStorage["_ClientID_"];
                var selProd = localStorage["_ProductID_"];

                if (selClient === null || selClient === "" || parseInt(selClient) < 1) {
                    InlineErrorMessage("Please select a Client!", "dvError");
                    return false;
                }

                if (selProd === null || selProd === "" || parseInt(selProd) < 1) {
                    InlineErrorMessage("Please select a Product!", "dvError");
                    return false;
                }



                var url = '@Url.Action("Index", "ExpenseRequisitionManager")?clientId=' + parseInt(selClient) + "&productId=" + parseInt(selProd);

                $("#waitAdd").show();

                window.location.href = url;

                $("#waitAdd").hide();

            });


          $('#btnAddNewItem').on("click", function () {
                ClearInlineError("dvError");

             var selClient = localStorage["_ClientID_"];
                var selProd = localStorage["_ProductID_"];

                if (selClient === null || selClient === "" || parseInt(selClient) < 1) {
                    InlineErrorMessage("Session Time out please try logging out and login !", "dvError");
                    return false;
                }

                if (selProd === null || selProd === "" || parseInt(selProd) < 1) {
                    InlineErrorMessage("Session Time out please try logging out and login!", "dvError");
                    return false;
                }

                var url = '@Url.Action("AddExpenseRequisition", "ExpenseRequisitionManager")?clientId=' + parseInt(localStorage["_ClientID_"]) + "&productId=" + parseInt(localStorage["_ProductID_"]);

                $("#waitAdd").show();

                window.location.href = url;

                $("#waitAdd").hide();

          });

     

    </script>



    <script>
        function deleteItem(id) {
            if (id === "" || parseInt(id) < 1) {
                InlineErrorMessage(data.Error ? data.Error : "Invalid Selection!", "dvError");
                return false;
            }
            if (!confirm("Are you sure you want to delete this item?")) {
                return false;
            }


            $.ajax({
                type: "POST",
                url: '@Url.Action("", "ExpenseRequisitionManager")',
                data: { ExpenseRequisitionId: parseInt(id) }, //JSON.stringify(),
                success: function (data) {
                    if (!data.IsAuthenticated) {
                        window.location.href = "@Url.Action("Login", "Portal")";
                        return;
                    }
                    if (!data.IsSuccessful) {
                        InlineErrorMessage(data.Error ? data.Error : "Unknown error occured. Please try again later!", "dvError");
                        swal({
                            title: "",
                            text: data.Error ? data.Error : "Unknown error occured. Please try again later!",
                            type: "error",
                            showCancelButton: false,
                            confirmButtonText: "Close",
                            closeOnConfirm: true,
                        }, function (isConfirm) {
                            if (isConfirm) {

                            }
                        });

                    } else {
                        $('#dvModal').modal('hide');
                        swal({
                            title: "",
                            text: "ExpenseRequisition Information was deleted successfully",
                            type: "success",
                            showCancelButton: false,
                            confirmButtonText: "Ok",
                            closeOnConfirm: false,
                        }, function (isConfirm) {
                            if (isConfirm) {
                                window.location.reload();
                            }
                        });
                    }
                },
                complete: function () {
                    // $("#waitAdd").hide();

                }
            });
            return false;
        }
    </script>


    @*<script>

         $('#onFilterChange').on("change", function () {
                ClearInlineError("dvError"); 
                var filterval = this.value;
                var selClient = localStorage["_ClientID_"];
                var selProd = localStorage["_ProductID_"];
                

                if (selClient === null || selClient === "" || parseInt(selClient) < 1) {
                    InlineErrorMessage("Please select a Client!", "dvError");
                    return false;
                }

                if (selProd === null || selProd === "" || parseInt(selProd) < 1) {
                    InlineErrorMessage("Please select a Product!", "dvError");
                    return false;
                }

                if (filterval === null || filterval === "" || filterval === undefined) {
                    filterval = 0;
                } 

                var url = '@Url.Action("Index", "ExpenseRequisitionManager")?clientId=' + parseInt(selClient) + "&productId=" + parseInt(selProd) + "&filtervalue=" + parseInt(filterval);
              
                
                $("#waitAdd").show();

                window.location.href = url;

                $('#onFilterChange').val('@Model.Count()');
                $("#waitAdd").hide();

            });


             $('#previousBtn').on("click", function () {
                ClearInlineError("dvError"); 
                 var filterval = this.value;
                 var pageNumber = $('#onFilterChange').val();


                 var selClient = localStorage["_ClientID_"];
                 var selProd = localStorage["_ProductID_"];

                if (selClient === null || selClient === "" || parseInt(selClient) < 1) {
                    InlineErrorMessage("Please select a Client!", "dvError");
                    return false;
                }

                if (selProd === null || selProd === "" || parseInt(selProd) < 1) {
                    InlineErrorMessage("Please select a Product!", "dvError");
                    return false;
                }

                if (filterval === null || filterval === "" || filterval === undefined) {
                    filterval = 0;
                 } 
                  if (pageNumber === null || pageNumber === "" || pageNumber === undefined) {
                    pageNumber = 0;
                } 

                var url = '@Url.Action("Index", "ExpenseRequisitionManager")?clientId=' + parseInt(selClient) + "&productId=" + parseInt(selProd) + "&filtervalue=" + parseInt(filterval) + "&pageNumbers=" + parseInt(pageNumber);
                 
                $("#waitAdd").show();

                window.location.href = url;

                $("#waitAdd").hide();

          });

          $('#nextBtn').on("click", function () {
                   ClearInlineError("dvError"); 
                var filterval = this.value;
                var selClient = localStorage["_ClientID_"];
                var selProd = localStorage["_ProductID_"];
                

                if (selClient === null || selClient === "" || parseInt(selClient) < 1) {
                    InlineErrorMessage("Please select a Client!", "dvError");
                    return false;
                }

                if (selProd === null || selProd === "" || parseInt(selProd) < 1) {
                    InlineErrorMessage("Please select a Product!", "dvError");
                    return false;
                }

                if (filterval === null || filterval === "" || filterval === undefined) {
                    filterval = 0;
                } 

                var url = '@Url.Action("Index", "ExpenseRequisitionManager")?clientId=' + parseInt(selClient) + "&productId=" + parseInt(selProd) + "&filtervalue=" + parseInt(filterval);
                 
                $("#waitAdd").show();

                window.location.href = url;

                $('#onFilterChange').val('@Model.Count()');
                $("#waitAdd").hide();

            });


    </script>*@
}