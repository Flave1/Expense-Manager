@model IEnumerable<GlobalLitePortalHelper.APIObjs.DisbursementObj>
@using XPLUG.WEBTOOLKIT
@using PluglexHelper.PortalObjs
@using GlobalLitePortalHelper.APICore
@{
    ViewBag.Title = "Expense Management";
    ViewBag.PgTitle = "Expense Management";
    var error = ViewBag.Error as string;


    var hasError = !string.IsNullOrEmpty(error);

    var clientVal = ViewBag.ClientId as string;
    var prodVal = ViewBag.ProductId as string;
    var prodItemVal = ViewBag.ProductItemId as string;
    var clientId = 0;
    var prodId = 0;
    var prodItemId = 0;

    if (!string.IsNullOrEmpty(clientVal) && clientVal.IsNumeric())
    {
        clientId = int.Parse(clientVal);
    }
    if (!string.IsNullOrEmpty(prodVal) && prodVal.IsNumeric())
    {
        prodId = int.Parse(prodVal);
    }
    if (!string.IsNullOrEmpty(prodItemVal) && prodItemVal.IsNumeric())
    {
        prodItemId = int.Parse(prodItemVal);
    }
    var expenseList = (List<PlugLitePortalHelper.APIObjs.ExpenseObj>)Session["_ExpenseList_"];
    if (expenseList == null)
    {
        expenseList = new List<PlugLitePortalHelper.APIObjs.ExpenseObj>();
    }

}

<b><h3>Expense Retirement</h3></b>
<div class="card">
    <div class="card-header">
        <div class="row" style="float:right;">

        </div>
    </div>
    <div class="card-block">
        @if (!string.IsNullOrEmpty(error) && error.Length > 0)
        {
            <div class="alert alert-success btn btn-sm" role="alert">
                @Html.Raw(error)
            </div>
        }
        <div class="table-responsive">
            <table id="dtBasicExample" class="table table-striped table-bordered" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Title</th>
                        <th>Date Aproved</th>
                        <th> Amount Approved </th>
                        <th> Last Balance </th>
                        <th> status </th>
                        <th class="tabledit-toolbar-column">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int k = 1;
                        foreach (var item in Model.OrderByDescending(m => m.DisbursementId))
                        {
                                        <tr>
                                            <th>@k</th>

                                            <td>
                                                <span class="wrap-table">
                                                    @item.Title
                                                </span>
                                            </td>
                                            <td>
                                                <span class="wrap-table">
                                                    @item.ApprovalDate
                                                </span>
                                            </td> 
                                            <td>
                                                @foreach (var expense in expenseList.Where(m => m.ExpenseId == item.ExpenseId))
                                                {
                                                    <span class="wrap-table">
                                                        @expense.AmountApproved
                                                    </span>
                                                }

                                            </td>
                                            <td>
                                                <span class="wrap-table">
                                                    @item.AmountDisbursed
                                                </span>
                                            </td>
       
                                            <td>
                                                <span class="wrap-table">
                                                    @{ var enumName = (DisbursementStatus)item.Status;}
                                                    @enumName
                                                </span>
                                            </td>

                                            <td>
                                                <div class="tabledit-toolbar btn-toolbar">
                                                    @if (item.Status != (int)DisbursementStatus.Disbursed)
                                                    {
                                                        <span class="p-1"><a href="@Url.Action("RetirementItems", "ExpenseManager", new {expenseRequisitionId = item.ExpenseRequisitionId})" data-modal="" data-toggle="tooltip" title="Retire"><i class="fa fa-arrow-right"></i></a></span>

                                                    }
                                                    @*<span class="p-1"><a href="@Url.Action("_ExpenseDetail", "ExpenseManager", new {ExpenseId = item.ExpenseId})" data-modal="" data-toggle="tooltip" title="Detail">   <i class="fas fa-eye"></i></a></span>
                <span class="p-1"><a href="@Url.Action("_ManageExpenseUsers", "ExpenseManager", new {ExpenseId = item.ExpenseId, ExpenseName = item.ExpenseName})" data-modal="" data-backdrop="static" data-keyboard="false" data-toggle="tooltip" title="Manage Users">   <i class="fas fa-users-cog"></i></a></span>
                <span class="p-1"><a href="@Url.Action("Index", "ProductManager", new {ExpenseId = item.ExpenseId})" title="Products">   <i class="fa fa-arrow-circle-right"></i></a></span>
                <span class="p-1"><a href="#" onclick="deleteItem('@item.ExpenseId')" data-toggle="tooltip" title="Delete"><i class="far fa-trash-alt red-text"></i></a></span>*@

                                                </div>


                                            </td>

                                        </tr>
                            k++;
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>
@section scripts { 
    <script>
        $(document).ready(function () { 

            $('#dtBasicExample').DataTable();

            $('.dataTables_length').hide();

            $('#dtBasicExample_filter').hide();


            $('#btnLoad').on("click", function () {
                var selClient = localStorage["_ClientID_"];
                var selProd = localStorage["_ProductID_"];
                var selProdItemId = localStorage["_ProductItemID_"];

                if (selClient === null || selClient === "" || parseInt(selClient) < 1) {
                    InlineErrorMessage("Session Time out please try logging out and login !", "dvError");
                    return false;
                }

                if (selProd === null || selProd === "" || parseInt(selProd) < 1) {
                    InlineErrorMessage("Session Time out please try logging out and login!", "dvError");
                    return false;
                }

                if (selProdItemId === null || selProdItemId === "" || parseInt(selProdItemId) < 1) {
                    InlineErrorMessage("Session Time out please try logging out and login!", "dvError");
                    return false;
                }


                var url = '@Url.Action("Index", "ExpenseManager")?clientId=' + parseInt(selClient) + "&productId=" + parseInt(selProd) + "&productItemId=" + parseInt(selProdItemId);

                $("#waitAdd").show();

                window.location.href = url;

                $("#waitAdd").hide();

            });

        });
    </script>





    <script>
        function deleteItem(id) {
            if (id === "" || parseInt(id) < 1) {
                InlineErrorMessage(data.Error ? data.Error : "Invalid Selection!", "dvError");
                return false;
            }
            if (!confirm("Are you sure you want to delete this item?")) {
                return false;
            }


            $.ajax({
                type: "POST",
                url: '@Url.Action("ProcessDeleteRequest", "ExpenseManager")',
                data: { ExpenseId: parseInt(id) }, //JSON.stringify(),
                success: function (data) {
                    if (!data.IsAuthenticated) {
                        window.location.href = "@Url.Action("Login", "Portal")";
                        return;
                    }
                    if (!data.IsSuccessful) {
                        InlineErrorMessage(data.Error ? data.Error : "Unknown error occured. Please try again later!", "dvError");
                        swal({
                            title: "",
                            text: data.Error ? data.Error : "Unknown error occured. Please try again later!",
                            type: "error",
                            showCancelButton: false,
                            confirmButtonText: "Close",
                            closeOnConfirm: true,
                        }, function (isConfirm) {
                            if (isConfirm) {

                            }
                        });

                    } else {
                        $('#dvModal').modal('hide');
                        swal({
                            title: "",
                            text: "Expense Information was deleted successfully",
                            type: "success",
                            showCancelButton: false,
                            confirmButtonText: "Ok",
                            closeOnConfirm: false,
                        }, function (isConfirm) {
                            if (isConfirm) {
                                window.location.reload();
                            }
                        });
                    }
                },
                complete: function () {
                    // $("#waitAdd").hide();

                }
            });
            return false;
        }
    </script>
   
}