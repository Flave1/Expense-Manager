@using GlobalLitePortalHelper.APICore
@model GlobalLitePortalHelper.APIObjs.RequestTypeSetting
@{
    /**/

    Layout = null;
    var error = ViewBag.Error as string;
    var sessionError = ViewBag.SessionError as string;
    var hasError = !string.IsNullOrEmpty(error);
    var hasSessionError = !string.IsNullOrEmpty(sessionError);
}
@Html.Partial("_WaitLoader")
<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Edit Request type Setting</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            @if (hasSessionError)
            {
                <div class="alert alert-danger" role="alert" id="customError">
                    <h4>Error!</h4>
                    <p>@Html.Raw(sessionError)</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>

            }
            else
            {
                if (hasError)
                {
                    <div class="alert alert-danger" role="alert" id="customError">
                        <h4>Error!</h4>
                        <p>@Html.Raw(error)</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>

                }
                using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmEdit", data_parsley_validate = "" }))
                {
                    @Html.Hidden("ClientId", Model.ClientId)
        <div class="col-md-12 col-sm-12">
            <div id="dvError"></div>

            <div class="col-md-12 col-sm-12">
                <div id="dvError"></div>
                <input type="hidden" name="ProductId" value="@Model.ProductId" />
                <input type="hidden" name="ProductItemId" value="@Model.ProductItemId" />
                <input type="hidden" name="ClientId" value="@Model.ClientId" />
                <input type="hidden" name="RequestTypeSettingId" value="@Model.RequestTypeSettingId" />

                <div class="form-group row">
                    <div class="col-sm-6  ">
                        <label>Type</label>
                        @Html.DropDownList("RequestType", EnumHelper.GetSelectList(typeof(RequestType)), "Request Type", new { @id = "RequestType", @class = "form-control input-new" })
                    </div>
                    <div class="col-sm-6 ">
                        <label>Amount Allowed </label>
                        <input type="text" class="form-control" id="AmountAllowed" value="@Model.AmountAllowed" name="AmountAllowed" required="" data-parsley-maxlength="200" data-parsley-minlength="1" data-parsley-required-message="AmountAllowed must be between 2 and 200 characters">
                    </div>

                </div>

                <div class="form-group row">
                    <div class="col-sm-6  ">
                        <label>Duration</label>
                        <input type="text" class="form-control" id="AllowedTaskTimeSpan" value="@Model.AllowedTaskTimeSpan" name="AllowedTaskTimeSpan" required="" data-parsley-maxlength="200" data-parsley-minlength="1" data-parsley-required-message="AllowedTaskTimeSpan must be between 2 and 200 characters">
                    </div>
                    <div class="col-sm-6  ">
                        <label>Type</label>
                        @Html.DropDownList("RequestFrequencyType", EnumHelper.GetSelectList(typeof(RequestFrequencyType)), "Request Frequency Type", new { @id = "RequestFrequencyType", @class = "form-control input-new" })
                    </div>

                </div>
 
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-success">Update</button>
            </div>
        </div>
                }

            }
        </div>

    </div>
</div>

<script src="~/Content/assets/libs/jquery-validation/dist/jquery.validate.min.js"></script>

<script>
    $(document).ready(function () {

        $('#frmEdit').parsley().on('field:validated', function() {
            var ok = $('.parsley-error').length === 0;
            if (!ok) {
                InlineErrorMessage("Validation Error! Please check values inputted", "dvError");
                return false;
            }
        }).on('form:submit', function () {
            ClearInlineError("dvError");


            var frm = $("#frmEdit");

            if (frm == null) {
                InlineErrorMessage("Invalid Tab Information", "dvError");
                return false;
            }


            if (!frm.valid()) {
                InlineErrorMessage("Validation Error! Please check all fields", "dvError");
                return false;
            }

            //var actionUrl = frm.attr("action");
            var params = frm.serializeArray();

            $("#waitAdd").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("ProcessEditRequestTypeSettingRequest", "RequestTypeSettingManager")',
                data: params,
                success: function (data) {
                    if (!data.IsAuthenticated) {
                        window.location.href = "@Url.Action("Login", "Portal")";
                        return;
                    }
                    if (!data.IsSuccessful) {
                        InlineErrorMessage(data.Error ? data.Error : "Unknown error occured. Please try again later!", "dvError");
                       swal({
                            title: "",
                            text: data.Error ? data.Error : "Unknown error occured. Please try again later!",
                            type: "error",
                            showCancelButton: false,
                            confirmButtonText: "Close",
                            closeOnConfirm: true,
                        }, function (isConfirm) {
                            if (isConfirm) {

                            }
                        });

                    } else {
                        $('#dvModal').modal('hide');
                        swal({
                            title: "",
                            text: "Updated successfully",
                            type: "success",
                            showCancelButton: false,
                            confirmButtonText: "Ok",
                            closeOnConfirm: false,
                        }, function (isConfirm) {
                            if (isConfirm) {
                               window.location.reload();
                            }
                        });
                    }
                },
                complete: function () {
                    $("#waitAdd").hide();
                }
            });
            return false;
        });



    });


</script>

