@model IEnumerable<PlugLitePortalHelper.APIObjs.WorkflowSettingObj>
@using XPLUG.WEBTOOLKIT
@using GlobalLitePortalHelper.APICore
@{
    ViewBag.Title = "WorkflowSetting Management";
    ViewBag.PgTitle = "WorkflowSetting Management";
    var error = ViewBag.Error as string;
     

}

@Html.Partial("_WaitLoader")

<b><h3>Approval Levels</h3></b>
<div class="card">

    <div class="card-header">
        <div class="row text-right"> 
            <div class="col-8">
                <button type="button" class="btn btn-yellow btn-sm waves-effect waves-light d-inline-block md-trigger" id="btnLoad">
                    <i class="icofont icofont-plus m-r-5"></i>RELOAD
                </button>
            </div>
            <div class="col-4 ">

                <button type="button" class="btn btn-yellow btn-sm waves-effect waves-light d-inline-block md-trigger" id="btnAddNewItem">
                    <i class="icofont icofont-plus m-r-5"></i>New
                </button>
            </div>
        </div>
    </div>
    <div class="card-block">
        @if (!string.IsNullOrEmpty(error) && error.Length > 0)
        {
            <div class="alert alert-success btn btn-sm" role="alert">
                @Html.Raw(error)
            </div>
        }
        <div class="table-responsive">
            <table id="dtBasicExample" class="table table-striped table-bordered" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>#</th>
                        <th> RequestType</th>
                        <th>ApprovalWorkflow</th>
                        <th>Status</th>
                        <th class="tabledit-toolbar-column">Action</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int k = 1;
                        foreach (var item in Model)
                        {
                            <tr>
                                <th>@k</th>
                                <td>
                                    <span class="wrap-table">
                                        @{var enumName = (RequestType)item.RequestType;}
                                        @enumName
                                    </span>
                                </td>
                                <td>
                                    <span class="wrap-table appwf">
                                        @Html.Raw(item.ApprovalWorkflow)
                                    </span>
                                </td>

                                <td>
                                    <span class="wrap-table">
                                        @item.StatusLabel
                                    </span>
                                </td>

                                <td>
                                    <div class="tabledit-toolbar btn-toolbar">

                                        <span class="p-1"><a href="@Url.Action("EditWorkflowSetting", "WorkflowSettingManager", new {WorkflowSettingId = item.WorkflowSettingId})" data-modal="" data-toggle="tooltip" title="Edit"><i class="far fa-edit"></i></a></span>
                                     
                                    </div>


                                </td>

                            </tr>
                            k++;
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>
@section scripts {

    <script>

        $(window).on('load', function () {
            $("#waitAdd").show();
        });
        $(document).ready(function () {
             formatWorkflowApprovalLevel();
                  $("#waitAdd").hide();
        });
            $('#btnLoad').on("click",
                function() {
                    ClearInlineError("dvError");

                    var selClient = localStorage["_ClientID_"];
                var selProd = localStorage["_ProductID_"]; 
                    if (selClient === null || selClient === "" || parseInt(selClient) < 1) {
                        InlineErrorMessage("Please select a Client!", "dvError");
                        return false;
                    }

                    if (selProd === null || selProd === "" || parseInt(selProd) < 1) {
                        InlineErrorMessage("Please select a Product!", "dvError");
                        return false;
                    }
              


                    var url = '@Url.Action("Index", "WorkflowSettingManager")?clientId=' +
                        parseInt(selClient) +
                        "&productId=" +
                        parseInt(selProd) ;

                    $("#waitAdd").show();

                    window.location.href = url;

                    $("#waitAdd").hide();

                });


    </script>
    <script>



        $('#btnAddNewItem').on("click",
            function() {
                ClearInlineError("dvError");

                 var selClient = localStorage["_ClientID_"];
                var selProd = localStorage["_ProductID_"]; 

                if (selClient === null || selClient === "" || parseInt(selClient) < 1) {
                    InlineErrorMessage("Please select a Client!", "dvError");
                    return false;
                }

                if (selProd === null || selProd === "" || parseInt(selProd) < 1) {
                    InlineErrorMessage("Please select a Product!", "dvError");
                    return false; 
                }

                var url = '@Url.Action("AddWorkflowSetting", "WorkflowSettingManager")?clientId=' +  parseInt(selClient) +  "&productId=" +  parseInt(selProd);

                $("#waitAdd").show();

                window.location.href = url;

                $("#waitAdd").hide();

            });


        function formatWorkflowApprovalLevel() {
            var WFLevelArray = new Array();
            $.getJSON("@Url.Action("LoadWorkflowApprovalLevels", "OBusinessDataProvider")",
                function(data) {
                    $.each(data,
                        function(i, item) {
                            WFLevelArray.push(item);
                        });
                    console.log('start: ' + new Date().getTime());

                    $('.appwf').each(function() {
                        myArray = $(this).text().trim().split(' ');
                        var rebuildItem = "";
                        var cnt = 0;
                        $.each(myArray,
                            function(index, value) {
                                var row = value.split('|');
                                var item = WFLevelArray.find(x => parseInt(x["Id"]) === parseInt(row[0]));
                                if (cnt === 0) {
                                    rebuildItem = item["Name"] + '   ' + row[1] + '|' + row[2] + '\n';
                                } else {
                                    rebuildItem += '&#8594;    ' + item["Name"] + '  ' + row[1] + '|' + row[2] + '\n';
                                }
                                cnt++;
                            });
                        $(this).html(rebuildItem);

                    });
                    console.log('ended: ' + new Date().getTime());
                    $("#waitAdd").hide();
                });

        }

        function findItem(arr, term) {
            var items = [];
            for (var i = 0; i < arr.length; i++) {
                var item = arr[i];
                for (var prop in item) {
                    var detail = item[prop].toString().toLowerCase();
                    if (detail.indexOf(term) > -1) {
                        return item["Name"];
                        items.push(item);
                        break;
                    }
                }
            }
            return items;
        }
    </script>


}