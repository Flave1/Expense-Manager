@using GlobalLitePortalHelper.APICore
@model PlugLitePortalHelper.APIObjs.WorkflowSettingObj
@{
    var error = ViewBag.Error as string;
    var sessionError = ViewBag.SessionError as string;
    var hasError = !string.IsNullOrEmpty(error);
    var hasSessionError = !string.IsNullOrEmpty(sessionError);
    var catId = (int)ExpenseLookupItems.Department;
}
@Html.Partial("_WaitLoader")
<div class="card">
    <div class="card-header">
        @*<div class="row">
                <strong class="col-4"><b>@Model.ClientName </b> </strong>
                <strong class="col-4">@Model.ProductName </strong>
                <strong class="col-4"> <small>@Model.ProductItemName</small> </strong>
            </div>*@

        <div class="col-sm-3 pull-right text-right" style="float:right">
            <button type="button" class="btn btn-secondary btn-sm waves-effect waves-light d-inline-block md-trigger pull-right" onclick="back()">
                <i class="icofont icofont-plus m-r-5"></i>Back
            </button>
        </div>
        <div class="card">
            @if (hasSessionError)
            {
                <div class="alert alert-danger" role="alert" id="customError">
                    <p>@Html.Raw(sessionError)</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            }
            else
            {
                <div class="card-header">
                    @*<div class="row">
                            <strong class="col-4"><b>@Model.ClientName </b> </strong>
                            <strong class="col-4">@Model.ProductName </strong>
                            <strong class="col-4"> <small>@Model.ProductItemName</small> </strong>
                        </div>*@
                    @if (hasError)
                    {
                        <div class="alert alert-danger" role="alert" id="customError">
                            <p>@Html.Raw(error)</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>

                        <div class="row">
                            <div class="col-sm-9 form-group">
                                <div id="dvError"></div>
                            </div>
                        </div>
                    }
                </div>
                <div class="card-block" style="margin-top: 15px">
                    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmEditProduct", data_parsley_validate = "" }))
                    {
                        <div class="col-md-12 col-sm-12">
                            <div id="dvError"></div>
                            <input type="hidden" name="WorkflowSettingId" value="@Model.WorkflowSettingId" />
                            <input type="hidden" name="ProductId" value="@Model.ProductId" />
                            <input type="hidden" name="ProductItemId" value="@Model.ProductItemId" />
                            <input type="hidden" name="ClientId" value="@Model.ClientId" />
                            <div class="form-group">
                                Look Up items
                                @Html.DropDownList("RequestType", EnumHelper.GetSelectList(typeof(RequestType)), "Select Request Type", new { @id = "lookUpId", @class = "form-control" })
                            </div>
                            <div class="row">
                                <div class=" col-8">
                                    <div class="col-12">
                                        <ol id="SubItemId">
                                        </ol>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <br />
                                    <button class="btn btn-secondary" type="button" id="BtnListItems">Ok</button>
                                    @*<input  class="form-control" id="any" value="1" >
                                        <input  class="form-control"  value="2" >
                                        <input  class="form-control" id="any" value="3" >*@
                                    <input type="hidden" readonly="" class="form-control" id="ApprovalWorkflow" value="@Model.ApprovalWorkflow" name="ApprovalWorkflow">
                                    <div class="row">
                                        <div class="form-group col-6">
                                            Status
                                            @Html.CheckBox("StatusVal", Model.StatusVal, new { htmlAttributes = new { @class = "form-control input-new" } })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="submit" id="btnAdd" class="btn btn-success">Update Expense Lookup</button>
                            </div>
                        </div>
                    }
                </div>
            }

        </div>
    </div>
</div>
@section scripts {

    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Content/assets/libs/jquery-validation/dist/jquery.validate.min.js"></script>

    <script>
    //handles form submit
    $(document).ready(function () {

        $('#frmEditProduct').parsley().on('field:validated', function () {
            alert('testing alert');
            var ok = $('.parsley-error').length === 0;
            if (!ok) {
                InlineErrorMessage("Validation Error! Please check values inputted", "dvError");
                return false;
            }
        }).on('form:submit', function () {
            ClearInlineError("dvError");

            var selClient = '@Model.ClientId';
            var selProd = '@Model.ProductId';
            var clientId = 0;
            var prodId = 0;
            if (selClient === "" || selClient.length < 1 || parseInt(selClient) < 1) {
                clientId = 0;
            } else {
                clientId = parseInt(selClient);
            }

            if (selProd === "" || selProd.length < 1 || parseInt(selProd) < 1) {
                prodId = 0;
            } else {
                prodId = parseInt(selProd);
            }

            if (clientId < 1) {
                InlineErrorMessage("Invalid Client Information", "dvError");
                return false;
            }

            if (prodId < 1) {
                InlineErrorMessage("Invalid Product Information", "dvError");
                return false;
            }




            var frm = $("#frmEditProduct");

            if (frm == null) {
                InlineErrorMessage("Invalid Product Information", "dvError");
                return false;
            }


            if (!frm.valid()) {
                InlineErrorMessage("Validation Error! Please check all fields", "dvError");
                return false;
            }

            //var actionUrl = frm.attr("action");
            var params = frm.serializeArray();

            var url = '@Url.Action("Index", "ProductItemManager")?clientId=' + clientId + "&productId=" + prodId;

            $("#waitAdd").show();
            $.ajax({
                type: "POST",
                url: '@Url.Action("ProcessEditWorkflowSettingRequest", "WorkflowSettingManager")',
                data: params,
                success: function (data) {
                    if (!data.IsAuthenticated) {
                        window.location.href = "@Url.Action("Login", "Portal")";
                        return;
                    }
                    if (!data.IsSuccessful) {
                        InlineErrorMessage(data.Error ? data.Error : "Unknown error occured. Please try again later!", "dvError");
                       swal({
                            title: "",
                            text: data.Error ? data.Error : "Unknown error occured. Please try again later!",
                            type: "error",
                            showCancelButton: false,
                            confirmButtonText: "Close",
                            closeOnConfirm: true,
                        }, function (isConfirm) {
                            if (isConfirm) {

                            }
                        });

                    } else {
                        $('#dvModal').modal('hide');
                        swal({
                            title: "",
                            text: "Product Item Information was update successfully",
                            type: "success",
                            showCancelButton: false,
                            confirmButtonText: "Ok",
                            closeOnConfirm: true,
                        }, function (isConfirm) {
                            if (isConfirm) {
                               window.location.href = url;
                            }
                        });
                    }
                },
                complete: function () {
                    $("#waitAdd").hide();
                }
            });
            return false;
        });

    });
    </script>


    <script>
    //back button
    $(document).ready(function () {
        loadWorkflowApprovalLevel();
    });

    function back() {
        var url = '@Url.Action("Index", "WorkflowSettingManager")?clientId=' +parseInt('@Model.ClientId') +"&productId=" +parseInt('@Model.ProductId') +"&productItemId=" +parseInt('@Model.ProductItemId');
        window.location.href = url;
    }
    </script>

    <script>
        $("#lookUpId").change(function () {
            alert('end point change');
            var endpointId = $("#lookUpId").val();
            $("#LookupNameId").val($("#lookUpId option:selected").text());
        });
    </script>

    <script>
    // fetch data from ApprovalWorkflow string
    function getDataById(id,attribute) {
        var data =  '@Model.ApprovalWorkflow' ;
        var  currentApprovalWorkflow=data.split(' ');
        var maxval=0;
        currentApprovalWorkflow.forEach(element => {
            val = getDataByattribute(element.split('|'), id, attribute);
            if (val > 0) {
                maxval = val;
                return val;
            }
        });
        return maxval;
    }
    function getDataByattribute( attributeArray, id,attribute) {
        var arrindex=0;
        if(attribute=='Order') arrindex=1;
        if(attribute=='Rank') arrindex=2;
        if(attributeArray[0].toString() ===id.toString())
            return attributeArray[arrindex];
        else
            return  0 ;
    }
    </script>

    <script>
    //load loadWorkflow Approval Level from lookup 
    var WFLevelArray = []; 
    function loadWorkflowApprovalLevel() {
    $.getJSON("@Url.Action("LoadWorkflowApprovalLevels", "OBusinessDataProvider")",
        function(data) {
            var items = "";
            items += "<b><label class='col-6 '> Approval Levels </label></b>" +
                "<b> <label class='col-2 lkpItem  '>Rank </label></b> " +
                "<b><label class='col-2 lkpItem  '> Rank   </label> </b> ";
            $.each(data,
                function (i, item) {
                 WFLevelArray.push(item.id + ':' + item.Name); 
                items += "<label class='col-6 '>" +
                        item.Name +
                        "</label>   <input  value='" +
                        item.Id +
                        "' class='lkpItem'  type='hidden'/>   <input class='col-2 lkpItem lkpItemOrder' onkeyup='" +
                        GetId(item.Id) +
                        "' placeholder='Order' value='"+getDataById(item.Id, "Order")+"' type='number'/> <input class='col-2 lkpItem lkpItemRank' placeholder='Rank'  type='number' value='"+ getDataById(item.Id, "Rank") +"'  />  ";
                });
            $("#SubItemId").html(items);
        });
    }
    </script>

    <script>
        //read workflow settings to a single coma delimited string when okay button is clicked
        $("#BtnListItems").click(function () {
            var outputOrder = "";
            var formattedOutput = "";
            $(".lkpItem").each(function () {
                if ($(this).val() !== "") {
                    if (outputOrder === "") {
                        outputOrder += $(this).val();
                    } else {
                        outputOrder += "," + $(this).val();
                    }
                }
            }); 
        //build formated output and to be sent to db
        var myArray = [];
        var sets = [];
        myArray = outputOrder.split(',');
        var thisItemCount = myArray.length;
        for (var i = 1; i < thisItemCount; i = i + 3) {
            if (myArray[i].toString() === '0') {
                continue;
            }
            if (myArray[i + 1].toString() === '0') {
                InlineErrorMessage("Rank required.", "dvError");
                break;
                return false;
            }
            sets.push(myArray[i]);
            formattedOutput += " " + myArray[i - 1] + "|" + myArray[i] + "|" + myArray[i + 1];
        }
        $("#ApprovalWorkflow").val(formattedOutput.trim());
        if (duplicateExists(sets)) {
            InlineErrorMessage("Duplicate order detected.", "dvError");
            return false;
            }

            for (var i = 0; i < sets.length; i++) { 
                if (parseInt(sets[i]) > WFLevelArray.length) {  
                    InlineErrorMessage("Invalid oreder: Oreder value greater than number of items.", "dvError");
                     return false;
                }
            }
    });
    </script>
    <script>
        //check if array contains duplicate
        var duplicateExists = function (a) {
            for (var i = 0; i <= a.length; i++) {
                for (var j = i; j <= a.length; j++) {
                    if (i !== j && a[i] === a[j]) {
                        return true;
                    }
                }
            }
            return false;
        }
    </script>
}


