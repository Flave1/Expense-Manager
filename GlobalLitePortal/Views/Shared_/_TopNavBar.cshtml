@using GlobalLitePortal.PortalCore.Model
@using XPLUG.WEBTOOLKIT
@{
    var userData = MvcApplication.GetUserData(User.Identity.Name) ?? new UserData();
    var tabs = MvcApplication.GetPortalTabData(User.Identity.Name);
    var userRoleList = new List<string>();
    if (userData.UserId > 0)
    {
        userRoleList = userData.Roles.ToList();
    }

}


    <nav class="m-0 navbar navbar-expand-lg navbar-dark orange lighten-1 fixed-top" style="font-size: 13px;padding:0px 10px;min-height:55px;">
        <a class="navbar-brand" href="#"><img src="~/Content/skin2/img/logo-n.png" alt="EXPENSE EXPAT" width="130" /></a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent-555"
                aria-controls="navbarSupportedContent-555" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent-555">
            @{
                if (tabs != null && tabs.Any())
                {
                    var allTabs = tabs.OrderBy(m => m.TabOrder).ToList();
                    var tabItemsList = allTabs.GroupBy(e => e.TabParentId, (key, g) => new
                    {
                        TabId = key,
                        TabItems = g.ToList()
                    }).ToList();

                    var parentTabList = allTabs.FindAll(m => m.TabParentId == 0);
                    if (parentTabList.Any())
                    {
                        <ul class="navbar-nav mr-auto">
                            @foreach (var tabItemObj in parentTabList)
                            {

                                //Confirm access to parent tab
                                var tabRoleList = tabItemObj.Roles.Split(new[] { ',', ';' }, StringSplitOptions.RemoveEmptyEntries).ToList();
                                var results = tabRoleList.Where(userRoleList.Contains).ToList();
                                if (tabRoleList.Contains("All"))
                                {
                                    results.Add("All");
                                }

                                if (!results.Any())
                                {
                                    continue;
                                }

                                var thisItems = tabItemsList.Find(p => p.TabId == tabItemObj.TabId);
                                if (thisItems == null)
                                {
                                    // This parent Tab contains no child
                                    var tabSplit = tabItemObj.ContentUrl.Split(new[] { '|' }, StringSplitOptions.None);
                                    if (!tabSplit.Any() || tabSplit.Length != 3)
                                    {
                                        <li class="nav-item">
                                            <a class="nav-link nav-pad pl-4 pr-4 MenuDefaultState" href="javascript:void(0)">
                                                <i class="@tabItemObj.LeftPanelUrl"></i> @tabItemObj.Title
                                                <span class="sr-only">(current)</span>
                                            </a>
                                        </li>

                                        continue;
                                    }
                                    var areaUrl = string.IsNullOrEmpty(tabSplit[2]) ? "" : tabSplit[2];
                                    <li class="@Html.ActiveTab(tabSplit[1], new[] { tabSplit[0] }, "nav-item active")">
                                        <a href="@Url.Action(tabSplit[0], tabSplit[1], new {Area = areaUrl})" class="nav-link nav-pad pl-4 pr-4 MenuDefaultState">
                                            <i class="@tabItemObj.LeftPanelUrl"></i> @tabItemObj.Title
                                        </a>
                                    </li>
                                    continue;
                                }
                                if (thisItems.TabId > 0 && thisItems.TabItems.Any())
                                {
                                    var controllerList = new List<string>();
                                    var thisTabList = thisItems.TabItems.OrderBy(m => m.TabOrder).ToList();
                                    var tabListPaths = thisTabList.Select(m => m.ContentUrl).ToList();
                                    tabListPaths.ForEachx(m =>
                                    {
                                        if (!string.IsNullOrEmpty(m) && m.Contains("|"))
                                        {
                                            var thisPath = m.Split(new[] { '|' }, StringSplitOptions.RemoveEmptyEntries).ToList();
                                            if (thisPath.Any() && thisPath.Count > 1)
                                            {
                                                controllerList.Add(thisPath[1].Trim());
                                            }
                                        }
                                    });

                                    <li class="nav-item @Html.ActiveTabs(controllerList.ToArray(), new[] { "Index" }, "dropdown")">
                                        <a href="javascript:void(0)" class="nav-link nav-pad dropdown-toggle pl-4 pr-4 MenuDefaultState" id="navbarDropdownMenuLink-333" data-toggle="dropdown"
                                           aria-haspopup="true" aria-expanded="false">
                                            <i class="@tabItemObj.LeftPanelUrl"></i> @tabItemObj.Title
                                            <span class="sr-only">(current)</span>
                                        </a>
                                        <div class="dropdown-menu dropdown-default" aria-labelledby="navbarDropdownMenuLink-333" style="top: auto;left: auto!important;">
                                            <ul class="list-unstyled pl-1 pr-1 SubMenuSect">
                                                @foreach (var tabItem in thisTabList)
                                                {
                                                    //Confirm access to child tab
                                                    var childTabRoleList = tabItem.Roles.Split(new[] { ',', ';' }, StringSplitOptions.RemoveEmptyEntries).ToList();
                                                    var results2 = childTabRoleList.Where(userRoleList.Contains).ToList();
                                                    if (!results2.Any())
                                                    {
                                                        continue;
                                                    }

                                                    var tabSplit = tabItem.ContentUrl.Split(new[] { '|' }, StringSplitOptions.None);
                                                    if (!tabSplit.Any() || tabSplit.Length != 3)
                                                    {
                                                        continue;

                                                    }
                                                    var areaUrl = string.IsNullOrEmpty(tabSplit[2]) ? "" : tabSplit[2];
                                                    if (tabItem.Title.ToUpper() != "QCC")
                                                    {
                                                        <li class="nav-item @Html.ActiveTab(tabSplit[1], new[] { tabSplit[0] }, "active")">
                                                            <a href="@Url.Action(tabSplit[0], tabSplit[1], new {Area = areaUrl})" @(tabItem.TabType == 3 ? "data-modal=NONE" : "") class="dropdown-item">
                                                                <i class="@tabItem.LeftPanelUrl"></i>@tabItem.Title
                                                            </a>
                                                        </li>
                                                    }

                                                }
                                            </ul>

                                        </div>

                                    </li>

                                }

                            }
                        </ul>
                    }

                }
            }

            <ul class="navbar-nav ml-auto nav-flex-icons">

                <li class="nav-item">
                    @*<a class="nav-link" href="#">
                        <img src="https://mdbootstrap.com/img/Photos/Avatars/avatar-5.jpg" class="rounded-circle z-depth-0"
                             alt="avatar image" height="35">
                    </a>*@
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("ChangeUserPassword", "Portal")" data-modal="ChangePasswordModal" data-toggle="tooltip" title="Change Password">
                        <i class="fas fa-key rounded-circle z-depth-0 fa-lg pt-2"></i>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("MyProfile", "Portal")" data-toggle="tooltip" title="User Profile">
                        <i class="fas fa-user-cog rounded-circle z-depth-0 fa-lg pt-2"></i>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="@Url.Action("Index", "SignOut")" data-toggle="tooltip" title="Logout">
                        <i class="fa fa-power-off rounded-circle z-depth-0 fa-lg pt-2"></i>
                        <span class="badge-sonar "></span>
                    </a>
                </li>

                @*<li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" id="navbarDropdownMenuLink-3331" data-toggle="dropdown"
                       aria-haspopup="true" aria-expanded="false">
                        <img src="https://mdbootstrap.com/img/Photos/Avatars/avatar-5.jpg" class="rounded-circle z-depth-0"
                             alt="avatar image" height="35">
                    </a>
                    <div class="dropdown-menu dropdown-menu-right dropdown-default"
                         aria-labelledby="navbarDropdownMenuLink-333">
                        <a class="dropdown-item" href="#">Action</a>
                        <a class="dropdown-item" href="#">Another action</a>
                        <a class="dropdown-item" href="#">Something else here</a>
                    </div>
                </li>*@
            </ul>
        </div>
    </nav>








